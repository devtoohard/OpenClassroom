query getCourseList($semester_code: String!) {
  course(
    order_by: { title: asc }
    where: { semester_code: { _eq: $semester_code } }
  ) {
    title
    module_code
    semester_code
  }
}

query getFacultyList {
  faculty(order_by: { name: asc }) {
    id
    name
  }
}

query getFacultyById($faculty_id: String!) {
  faculty_by_pk(id: $faculty_id) {
    email
    id
    name
    has_consented
    notif_new_request
    notif_request_update
  }
}

mutation update_faculty_consent(
  $faculty_id: String!
  $has_consented: Boolean!
) {
  update_faculty(
    where: { id: { _eq: $faculty_id } }
    _set: { has_consented: $has_consented }
  ) {
    affected_rows
  }
}

mutation update_faculty_active_status(
  $faculty_id: String!
  $active_status: Boolean!
) {
  update_faculty(
    where: { id: { _eq: $faculty_id } }
    _set: { is_active: $active_status }
  ) {
    affected_rows
  }
}

query getTagsList {
  tag {
    label
  }
}

mutation update_visit_response(
  $visit_id: Int!
  $visit_status: String!
  $time_responded: timestamptz!
  $response_msg: String!
) {
  update_visit_by_pk(
    pk_columns: { id: $visit_id }
    _set: {
      time_responded: $time_responded
      visit_status: $visit_status
      response_msg: $response_msg
    }
  ) {
    time_responded
    visit_status
    response_msg
  }
}

query getPendingVisitsCount($faculty_id: String!, $semester_code: String!) {
  visit_aggregate(
    where: {
      seminar: {
        semester_code: { _eq: $semester_code }
        course_group: { faculty_id: { _eq: $faculty_id } }
      }
      visit_status: { _eq: "PENDING" }
    }
  ) {
    aggregate {
      count
    }
  }
}

query get_seminars_with_visits_by_time_requested($faculty_id: String) {
  seminar(where: { course_group: { faculty_id: { _eq: $faculty_id } } }) {
    title
    start
    module_code
    location_code
    location {
      full_name
    }
    date
    desc
    end
    id
    is_open
    semester_code
    semester {
      full_name
    }
    group_code
    visitor_capacity
    week
    visits(order_by: { time_requested: desc }) {
      id
      is_archived
      is_cancelled
      request_msg
      response_msg
      time_requested
      time_responded
      visit_status
      visitor_id
      visitor {
        email
        id
        name
        is_active
      }
    }
    course_group {
      id
      notes
      teaching_mode
      course {
        id
        title
        module_code
        desc
      }
      faculty {
        id
        name
      }
    }
  }
}
query get_semester_names {
  semester {
    code
    full_name
  }
}
query get_my_visits($visitor_id: String!) {
  visit(
    where: { visitor_id: { _eq: $visitor_id } }
    order_by: { seminar: { date: desc } }
  ) {
    id
    seminar_id
    visit_status
    visitor_id
    request_msg
    response_msg
    time_requested
    time_responded
    seminar {
      id
      module_code
      date
      start
      end
      is_open
      title
      desc
      visitor_capacity
      semester_code
      group_code
      semester {
        full_name
      }
      location {
        code
        full_name
      }
      course_group {
        id
        is_open
        notes
        teaching_mode
        faculty {
          id
          name
          email
          is_active
          has_consented
        }
        course {
          id
          module_code
          title
          desc
          module_brief_link
          tagged_as {
            tag_label
          }
        }
      }
    }
  }
}

mutation delete_visit_request($visit_id: Int!) {
  delete_visit_by_pk(id: $visit_id) {
    id
    visitor_id
  }
}

mutation cancel_visit_request($visit_id: Int!) {
  update_visit_by_pk(
    pk_columns: { id: $visit_id }
    _set: { visit_status: "CANCELLED" }
  ) {
    id
  }
}

query get_course_groups_by_faculty(
  $faculty_id: String!
  $semester_code: String!
) {
  course_group(
    where: {
      faculty_id: { _eq: $faculty_id }
      course: { semester_code: { _eq: $semester_code } }
    }
  ) {
    id
    is_open
    group_code
    course {
      id
      title
      module_code
    }
  }
}

query get_seminars_by_course_group(
  $course_group_id: Int!
  $date_lower_bound: date
) {
  seminar(
    where: {
      course_group: { id: { _eq: $course_group_id } }
      date: { _gte: $date_lower_bound }
    }
    order_by: { date: desc }
  ) {
    id
    date
    start
    end
    is_archived
    location_code
    location {
      code
      full_name
    }
    visitor_capacity
    is_open
    course_group {
      id
    }
  }
}

query get_course_group_details($course_group_id: Int!) {
  course_group(where: { id: { _eq: $course_group_id } }) {
    id
    group_code
    syllabus
    course_group_desc
    teaching_mode
    is_open
    notes
    course {
      id
      title
      module_code
      module_brief_link
      desc
    }
  }
}

mutation update_course_group_and_seminars_is_open(
  $course_group_id: Int!
  $is_open: Boolean!
) {
  update_course_group(
    where: { id: { _eq: $course_group_id } }
    _set: { is_open: $is_open }
  ) {
    affected_rows
  }
  update_seminar(
    where: { course_group: { id: { _eq: $course_group_id } } }
    _set: { is_open: $is_open }
  ) {
    affected_rows
  }
}

mutation update_course_group_desc($id: Int!, $course_group_desc: String!) {
  update_course_group(
    where: { id: { _eq: $id } }
    _set: { course_group_desc: $course_group_desc }
  ) {
    affected_rows
  }
}

mutation update_course_group_syllabus($id: Int!, $syllabus: String!) {
  update_course_group(
    where: { id: { _eq: $id } }
    _set: { syllabus: $syllabus }
  ) {
    affected_rows
  }
}

mutation update_course_group_notes($id: Int!, $notes: String!) {
  update_course_group(where: { id: { _eq: $id } }, _set: { notes: $notes }) {
    affected_rows
  }
}

mutation updateSeminarIsOpen($seminar_id: Int!, $is_open: Boolean!) {
  update_seminar(
    where: { id: { _eq: $seminar_id } }
    _set: { is_open: $is_open }
  ) {
    returning {
      is_open
    }
  }
}

query getLocations {
  location {
    code
    full_name
  }
}

mutation updateSeminar(
  $seminar_id: Int!
  $date: date!
  $start: time!
  $end: time!
  $visitor_capacity: Int
  $location_code: String!
  $title: String
  $desc: String
) {
  update_seminar(
    where: { id: { _eq: $seminar_id } }
    _set: {
      date: $date
      start: $start
      end: $end
      visitor_capacity: $visitor_capacity
      location_code: $location_code
      title: $title
      desc: $desc
    }
  ) {
    affected_rows
  }
}

mutation archive_seminar($seminar_id: Int!) {
  update_seminar(
    where: { id: { _eq: $seminar_id } }
    _set: { is_archived: true }
  ) {
    affected_rows
  }
}

mutation unarchive_seminar($seminar_id: Int!) {
  update_seminar(
    where: { id: { _eq: $seminar_id } }
    _set: { is_archived: false }
  ) {
    affected_rows
  }
}

mutation create_visit_request(
  $seminar_id: Int!
  $visitor_id: String!
  $request_msg: String
) {
  insert_visit(
    objects: [
      {
        seminar_id: $seminar_id
        visitor_id: $visitor_id
        request_msg: $request_msg
      }
    ]
  ) {
    returning {
      seminar_id
      id
      visit_status
      request_msg
      response_msg
      time_requested
      time_responded
    }
  }
}

mutation close_all_course_seminars($course_group_id: Int!) {
  update_seminar(
    where: { course_group: { id: { _eq: $course_group_id } } }
    _set: { is_open: false }
  ) {
    affected_rows
  }
}

query get_my_visited_request_seminars($visitor_id: String!) {
  seminar(where: { visits: { visitor_id: { _eq: $visitor_id } } }) {
    date
    end
    start
    course_group {
      course {
        title
      }
    }
    id
  }
}

query getSeminarById($seminar_id: Int!) {
  seminar_by_pk(id: $seminar_id) {
    id
    date
    start
    end
    title
    desc
    course_group {
      id
      course {
        id
        module_code
        title
      }
      faculty {
        id
        email
        name
      }
    }
  }
}

mutation update_faculty_notif_new_request(
  $faculty_id: String!
  $notif_new_request: Boolean!
) {
  update_faculty(
    where: { id: { _eq: $faculty_id } }
    _set: { notif_new_request: $notif_new_request }
  ) {
    affected_rows
  }
}

mutation update_faculty_notif_request_update(
  $faculty_id: String!
  $notif_request_update: Boolean!
) {
  update_faculty(
    where: { id: { _eq: $faculty_id } }
    _set: { notif_request_update: $notif_request_update }
  ) {
    affected_rows
  }
}

query get_seminars_of_faculty_in_calendar(
  $faculty_id: String!
  $semester_code: String!
) {
  seminar(
    where: {
      course_group: {
        faculty_id: { _eq: $faculty_id }
        semester_code: { _eq: $semester_code }
      }
    }
    order_by: { date: desc }
  ) {
    id
    date
    start
    end
    is_open
    visitor_capacity
    location {
      code
      full_name
    }
    course_group {
      id
      faculty {
        name
        id
      }
      course {
        id
        title
        module_code
        desc
      }
    }
  }
}

mutation update_visitor_capacity_for_all_seminars(
  $course_group_id: Int!
  $visitor_capacity: Int!
) {
  update_seminar(
    where: { course_group: { id: { _eq: $course_group_id } } }
    _set: { visitor_capacity: $visitor_capacity }
  ) {
    affected_rows
  }
}

query get_course_group_new_visitor_capacity($id: Int!) {
  course_group(where: { id: { _eq: $id } }) {
    id
    visitor_capacity
  }
}

query number_of_visit_requests_made_by_user(
  $visitor_id: String!
  $start_time: timestamptz!
  $end_time: timestamptz!
) {
  visit_aggregate(
    where: {
      visitor_id: { _eq: $visitor_id }
      time_requested: { _gt: $start_time, _lt: $end_time }
    }
  ) {
    aggregate {
      count
    }
  }
}

query number_of_completed_visit_requests_made_by_user(
  $visitor_id: String!
  $start_time: timestamptz!
  $end_time: timestamptz!
) {
  visit_aggregate(
    where: {
      visitor_id: { _eq: $visitor_id }
      visit_status: { _eq: "ACCEPTED" }
      time_requested: { _gt: $start_time, _lt: $end_time }
    }
  ) {
    aggregate {
      count
    }
  }
}

query number_of_visit_requests_received_by_user(
  $faculty_id: String!
  $start_time: timestamptz!
  $end_time: timestamptz!
) {
  visit_aggregate(
    where: {
      seminar: { course_group: { faculty_id: { _eq: $faculty_id } } }
      time_requested: { _gt: $start_time, _lt: $end_time }
    }
  ) {
    aggregate {
      count
    }
  }
}

query get_my_visits_by_date($visitor_id: String!, $date: date!) {
  visit(
    where: {
      visitor_id: { _eq: $visitor_id }
      seminar: { date: { _eq: $date } }
    }
  ) {
    id
    seminar_id
    visit_status
    visitor_id
    seminar {
      id
      date
      start
      end
      title
      course_group {
        id
        course {
          id
          module_code
          title
        }
      }
    }
  }
}

query number_of_hosted_visit_sessions_by_user(
  $faculty_id: String!
  $start_time: timestamptz!
  $end_time: timestamptz!
) {
  seminar_aggregate(
    where: {
      visits: {
        _and: [
          { time_requested: { _gte: $start_time } }
          { time_requested: { _lte: $end_time } }
          { visit_status: { _eq: "ACCEPTED" } }
        ]
      }
      course_group: { faculty_id: { _eq: $faculty_id } }
    }
  ) {
    aggregate {
      count
    }
  }
}

query number_of_hosted_visitors_by_user(
  $faculty_id: String!
  $start_time: timestamptz!
  $end_time: timestamptz!
) {
  visit_aggregate(
    distinct_on: visitor_id
    where: {
      visitor: {
        visits: {
          time_requested: { _gt: $start_time, _lt: $end_time }
          visit_status: { _eq: "ACCEPTED" }
        }
        course_groups: { faculty_id: { _eq: $faculty_id } }
      }
    }
  ) {
    aggregate {
      count
    }
  }
}

query get_my_seminars_by_date($faculty_id: String!, $date: date!) {
  seminar(
    where: {
      course_group: { faculty_id: { _eq: $faculty_id } }
      date: { _eq: $date }
    }
  ) {
    title
    start
    module_code
    date
    end
    id
    group_code
    course_group {
      id
      faculty_id
      course {
        id
        title
        module_code
      }
    }
  }
}

query total_number_of_visit_requests_across_all_users(
  $start_time: timestamptz!
  $end_time: timestamptz!
) {
  visit_aggregate(
    where: { time_requested: { _gt: $start_time, _lt: $end_time } }
  ) {
    aggregate {
      count
    }
  }
  faculty_aggregate {
    aggregate {
      count
    }
  }
}

query total_number_of_completed_visit_requests_across_all_users(
  $start_time: timestamptz!
  $end_time: timestamptz!
) {
  visit_aggregate(
    where: {
      time_requested: { _gt: $start_time, _lt: $end_time }
      visit_status: { _eq: "ACCEPTED" }
    }
  ) {
    aggregate {
      count
    }
  }
  faculty_aggregate {
    aggregate {
      count
    }
  }
}

query get_num_users {
  course_group {
    faculty_id
  }
}

query average_visit_requests_made_across_division(
  $division: String!
  $start_time: timestamptz!
  $end_time: timestamptz!
) {
  visit_aggregate(
    where: {
      visitor: { division: { _eq: $division } }
      time_requested: { _gt: $start_time, _lt: $end_time }
    }
  ) {
    aggregate {
      count
    }
  }
  faculty_aggregate(
    where: {
      has_consented: { _eq: true }
      is_active: { _eq: true }
      course_groups: {
        is_open: { _eq: true }
        faculty: { division: { _eq: $division } }
      }
    }
  ) {
    aggregate {
      count
    }
  }
}
query average_visit_requests_made_across_division_science(
  $division: String!
  $start_time: timestamptz!
  $end_time: timestamptz!
) {
  visit_aggregate(
    where: {
      visitor: { division: { _eq: $division } }
      time_requested: { _gt: $start_time, _lt: $end_time }
    }
  ) {
    aggregate {
      count
    }
  }
  faculty_aggregate(
    where: {
      has_consented: { _eq: true }
      is_active: { _eq: true }
      course_groups: {
        is_open: { _eq: true }
        faculty: { division: { _eq: $division } }
      }
    }
  ) {
    aggregate {
      count
    }
  }
}

query average_completed_visit_requests_made_across_division(
  $division: String!
  $start_time: timestamptz!
  $end_time: timestamptz!
) {
  visit_aggregate(
    where: {
      visitor: { division: { _eq: $division } }
      time_requested: { _gt: $start_time, _lt: $end_time }
      visit_status: { _eq: "ACCEPTED" }
    }
  ) {
    aggregate {
      count
    }
  }
  faculty_aggregate(
    where: {
      has_consented: { _eq: true }
      is_active: { _eq: true }
      course_groups: {
        is_open: { _eq: true }
        faculty: { division: { _eq: $division } }
      }
    }
  ) {
    aggregate {
      count
    }
  }
}

query average_visit_requests_received_across_division(
  $division: String!
  $start_time: timestamptz!
  $end_time: timestamptz!
) {
  visit_aggregate(
    where: {
      visitor: { division: { _eq: $division } }
      time_requested: { _gt: $start_time, _lt: $end_time }
    }
  ) {
    aggregate {
      count
    }
  }
  faculty_aggregate(
    where: {
      has_consented: { _eq: true }
      is_active: { _eq: true }
      course_groups: {
        is_open: { _eq: true }
        faculty: { division: { _eq: $division } }
      }
    }
  ) {
    aggregate {
      count
    }
  }
}

query average_hosted_visits_across_division(
  $division: String!
  $start_time: timestamptz!
  $end_time: timestamptz!
) {
  faculty_aggregate(
    where: {
      has_consented: { _eq: true }
      is_active: { _eq: true }
      course_groups: {
        is_open: { _eq: true }
        faculty: { division: { _eq: $division } }
      }
    }
  ) {
    aggregate {
      count
    }
  }
  visit_aggregate(
    distinct_on: visitor_id
    where: {
      visitor: {
        visits: {
          time_requested: { _gt: $start_time, _lt: $end_time }
          visit_status: { _eq: "ACCEPTED" }
        }
        course_groups: { faculty: { division: { _eq: $division } } }
      }
    }
  ) {
    aggregate {
      count
    }
  }
}
